# == Schema Information
#
# Table name: users
#
#  id                     :integer          not null, primary key
#  email                  :string           default(""), not null
#  encrypted_password     :string           default(""), not null
#  reset_password_token   :string
#  reset_password_sent_at :datetime
#  remember_created_at    :datetime
#  sign_in_count          :integer          default("0"), not null
#  current_sign_in_at     :datetime
#  last_sign_in_at        :datetime
#  current_sign_in_ip     :inet
#  last_sign_in_ip        :inet
#  created_at             :datetime         not null
#  updated_at             :datetime         not null
#  provider               :string
#  uid                    :string
#  username               :string
#  avatarc                :string
#
# Indexes
#
#  index_users_on_email                 (email) UNIQUE
#  index_users_on_reset_password_token  (reset_password_token) UNIQUE
#

class User < ApplicationRecord
  rolify
  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable, :omniauthable

  def admin?
    self.has_role?(:admin)
  end

    # facebook
  def self.find_for_facebook_oauth access_token
    if  access_token.info.email.blank?
      if self.where(provider: auth.provider, uid: auth.uid).exists?
        user = self.where(provider: auth.provider, uid: auth.uid).first
        user.provider = auth.provider
        user.uid = auth.uid
        user.avatarc = auth.info.image
      else
        user = self.create do |user|
          user.provider = auth.provider
          user.uid = auth.uid
          user.email = "autogenerated@email#{User.last.blank? ? 'autogenerated@email0.com' : User.last.id}"
          user.avatarc = auth.info.image
          user.username = auth.extra.raw_info.name
          user.password = Devise.friendly_token[0,20]
        end
      end
      user
    else
      if self.where(email: access_token.info.email).exists?
        user = self.where(email: access_token.info.email).first
        user.provider = access_token.provider
        user.uid = access_token.uid
        user.avatarc = access_token.info.image
      else
        user = self.create do |user|
        user.provider = access_token.provider
        user.uid = access_token.uid
        user.username = access_token.extra.raw_info.name
        user.email = access_token.info.email
        user.avatarc = access_token.info.image
        user.password = Devise.friendly_token[0,20]
        end
      end  
      user
    end
  end
  
  # google
  def self.find_for_google_oauth auth
    if  auth.info.email.blank?
      if self.where(provider: auth.provider, uid: auth.uid).exists?
        user = self.where(provider: auth.provider, uid: auth.uid).first
        user.provider = auth.provider
        user.uid = auth.uid
        user.avatarc = auth.info.image
      else
        user = self.create do |user|
          user.provider = auth.provider
          user.uid = auth.uid
          user.email = "autogenerated@email#{User.last.blank? ? 'autogenerated@email0.com' : User.last.id}"
          user.avatarc = auth.info.image
          user.username = auth.extra.raw_info.name
          user.password = Devise.friendly_token[0,20]
        end
      end
      user
    else
      if self.where(email: auth.info.email).exists?
        user = self.where(email: auth.info.email).first
        user.provider = auth.provider
        user.uid = auth.uid
        user.avatarc = auth.info.image
      else
        user = self.create do |user|
        user.provider = auth.provider
        user.uid = auth.uid
        user.username = auth.extra.raw_info.name
        user.email = auth.info.email
        user.avatarc = auth.info.image
        user.password = Devise.friendly_token[0,20]
        end
      end  
      user
    end
  end

  # vkontakte
  def self.find_for_vkontakte_oauth auth
    
    if self.where(provider: auth.provider, uid: auth.uid).exists?
      user = self.where(provider: auth.provider, uid: auth.uid).first
      user.provider = auth.provider
      user.uid = auth.uid
      user.avatarc = auth.info.image
    else
      user = self.create do |user|
        user.provider = auth.provider
        user.uid = auth.uid
        user.email = "autogenerated@email#{User.last.blank? ? 'autogenerated@email0.com' : User.last.id}"
        user.avatarc = auth.info.image
        user.username = auth.info.name
        user.password = Devise.friendly_token[0,20]
      end
    end
    user
  end

end
